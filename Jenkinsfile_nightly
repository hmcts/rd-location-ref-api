#!groovy

properties([
  pipelineTriggers([cron('21 01 * * *')]), // scheduling to trigger jenkins job
  parameters([
    string(name: 'URL_TO_TEST', defaultValue: 'http://rd-location-ref-api-aat.service.core-compute-aat.internal', description: 'The URL you want to run these tests against'),
    string(name: 'SecurityRules',
      defaultValue: 'http://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
      description: 'The URL you want to run these tests against'),
  ])
])

@Library("Infrastructure")

def type = "java"
def product = "rd"
def component = "location-ref-api"

def secrets = [
  's2s-${env}': [
    secret('microservicekey-rd-location-ref-api', 'S2S_SECRET')
  ],
  'rd-${env}': [
    secret('LOC-REF-OAUTH2-CLIENT-SECRET', 'LOC_REF_OAUTH2_CLIENT_SECRET'),
    secret('LOC-REF-OAUTH2-CLIENT-ID', 'LOC_REF_OAUTH2_CLIENT_ID'),
    secret('LD-SDK-KEY', 'LD_SDK_KEY'),
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

def vaultOverrides = [
  'preview' : 'aat',
  'spreview': 'saat'
]

withNightlyPipeline(type, product, component) {

  env.S2S_URL_FOR_TESTS = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
  env.TEST_URL = "http://rd-location-ref-api-pr-245.service.core-compute-preview.internal"
  env.Rules = params.SecurityRules
  env.execution_environment = "aat"

  overrideVaultEnvironments(vaultOverrides)
  loadVaultSecrets(secrets)

  enableMutationTest()
  enableFullFunctionalTest()
  enableSecurityScan()

}
